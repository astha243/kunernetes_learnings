# this is part of leraning from a cloud guru

//this documents contains the ectd cli commands utilized to  get the data information, created snapshot of it and finally 
 restoring the data data after deletation

// this bit of command we check the data contained on the clutser.name (key value), cacert, 
cert amd key argument is passed to authenticate the user and servers 

ETCDCTL_API=3 etcdctl get <Key.value> \ 
  --endpoints=<private IP>\
  --cacert=/home/cloud_user/etcd-certs/etcd-ca.pem \
  --cert=/home/cloud_user/etcd-certs/etcd-server.crt \
  --key=/home/cloud_user/etcd-certs/etcd-server.key

// this bit of command we save a snapshot for the cluster.name(key value)

ETCDCTL_API=3 etcdctl snapshot save /home/cloud_user/etcd_backup.db \
  --endpoints=https://10.0.1.101:2379 \
  --cacert=/home/cloud_user/etcd-certs/etcd-ca.pem \
  --cert=/home/cloud_user/etcd-certs/etcd-server.crt \
  --key=/home/cloud_user/etcd-certs/etcd-server.key

// stopped the cluster and deleted the exsisting data
 sudo systemctl stop etcd
 sudo rm -rf /var/lib/etcd

// these are the commands followed to 
restored the snapshot by creating a temporary cluster to store teh data in the data directory
sudo ETCDCTL_API=3 etcdctl snapshot restore /home/cloud_user/etcd_backup.db \
  --initial-cluster etcd-restore=https://10.0.1.101:2380 \
  --initial-advertise-peer-urls https://10.0.1.101:2380 \
  --name etcd-restore \
  --data-dir /var/lib/etcd

// what I learned from this lab?
ETCD is a very important concept in kubernetetes as it is the hub for key.value data storage, the Kuberenete API directly communicates with ETCD cluster for any cli commands passed.
If the cluster falis we can utilize ETCD to save a snapshot of the data and restor it back.  